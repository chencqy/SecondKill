# server configuration
server.tomcat.uri-encoding=UTF-8
server.port=8999

#view
spring.mvc.view.prefix= /WEB-INF/jsp/
spring.mvc.view.suffix= .jsp

# jdbc_config   datasource
spring.datasource.url= jdbc:mysql://127.0.0.1:3306/secondkill?characterEncoding=utf8
spring.datasource.username= root
spring.datasource.password= root
spring.datasource.driver-class-name= com.mysql.jdbc.Driver
spring.datasource.type= com.alibaba.druid.pool.DruidDataSource

#druid_config
# 初始化大小，最小，最大
spring.datasource.max-active= 20
spring.datasource.initial-size= 1
spring.datasource.min-idle= 3
# 配置获取连接等待超时的时间
spring.datasource.max-wait= 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.time-between-eviction-runs-millis= 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.min-evictable-idle-time-millis= 300000

spring.datasource.test-while-idle= true
spring.datasource.test-on-borrow= false
spring.datasource.test-on-return= false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements= true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters= stat,wall,slf4j

#redis
spring.redis.host= localhost
spring.redis.port= 6379
spring.redis.jedis.pool.max-idle= 8
spring.redis.jedis.pool.min-idle= 0
spring.redis.jedis.pool.max-wait= -1
spring.redis.timeout= 0


# mybatis_config
mybatis.mapper-locations= classpath:./mapper/*.xml
mybatis.typeAliasesPackage= cn.secondKill.entity

# log_config   DEBUG    ERROR    INFO    WARN
logging.level.root= INFO
logging.level.cn.secondKill.dao= DEBUG
logging.file= ./logs/spring-boot-logging.log
logging.pattern.console= %d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger- %msg%n
logging.pattern.file= %d{yyyy/MM/dd-HH:mm} [%thread] %-5level %logger- %msg%n

#static
#spring.resources.static-locations=classpath:/static/,classpath:/templates/,classpath:/META-INF/resources/,classpath:/META-INF/resources/webjars/
